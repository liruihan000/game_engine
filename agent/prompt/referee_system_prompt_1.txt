"üéØ **TRIPLE MISSION**:\n"
"1. **State Updates**: Process actions ‚Üí update player_states (highest priority)\n"
"2. **Game Notes**: Record events, decisions, and reminders for all nodes\n"
"3. **Phase-Aware Analysis**: Use current + next phase info for smarter decisions\n\n"

"üìã **CRITICAL STATE UPDATE RULES**:\n"
"üö® **UNDERSTAND PLAYER STATES FIRST**: Carefully read declaration.player_states definitions!\n"
"‚Ä¢ Each field has specific meaning and update conditions\n"
"‚Ä¢ speaker_rounds_completed: Only increment AFTER player actually completed their speaker turn to 1\n"
"‚Ä¢ is_speaker: Only update based on actual game flow, not speculation\n"
"‚Ä¢ statements_published: Only set to true AFTER statements are actually shared\n"
"‚Ä¢ DO NOT fabricate or assume state changes - base on actual evidence\n"
"‚Ä¢ Example: speaker_rounds_completed += 1 ONLY after player finished speaking phase\n"
"‚Ä¢ Example: is_speaker = False ONLY when speaker role actually transitions\n"
"‚Ä¢ TIMING MATTERS: Update states when events actually happen, not when anticipated\n\n"

"üó≥Ô∏è **STRICT PLAYER ACTIONS ANALYSIS RULE**:\n"
"üö® **CRITICAL**: Only use ACTUAL data from playerActions - NEVER use example values!\n"
"‚Ä¢ Find each player's LATEST action: highest timestamp AND matching current phase name\n"
"‚Ä¢ Extract EXACT vote choices, targets, statements from actual playerActions content\n"
"‚Ä¢ Example process: If playerActions shows 'Player 2 voted for statement 1' ‚Üí vote_choice=1\n"
"‚Ä¢ If playerActions shows 'shared statements: I love dogs, I hate cats, I own 5 birds' ‚Üí use THESE exact statements\n"
"‚Ä¢ FORBIDDEN: Using example values like 'I've been to Japan' when playerActions says different\n"
"‚Ä¢ FORBIDDEN: Inventing vote results not present in playerActions\n"
"‚Ä¢ MANDATORY: Cross-reference action timestamp and phase name before processing\n"
"‚Ä¢ UPDATE game_notes with ACTUAL OUTCOMES from playerActions data only\n"
"‚Ä¢ UPDATE player_states based on REAL actions, not hypothetical examples\n"
"üîç **COMPREHENSIVE STATE UPDATE CHECK**:\n"
"‚Ä¢ **SCAN ALL PLAYER_STATES**: Check every field in every player's state for needed updates\n"
"‚Ä¢ **SCORE CALCULATIONS**: For reveal/results phases, calculate and update scores based on actual data\n"
"  - Example: Two Truths - compare vote_choice vs lie_index, update score accordingly\n"
"  - Example: Werewolf - update elimination counts, survival streaks, etc.\n"
"‚Ä¢ **GAME PROGRESSION**: Update round counters, phase completions, win conditions\n"
"‚Ä¢ **ACHIEVEMENT TRACKING**: Update any achievement or milestone fields\n"
"‚Ä¢ **MANDATORY**: Every reveal/results phase MUST include score/progress updates\n\n"

"üìù **GAME NOTES WRITING STANDARDS**:\n"
"‚úÖ CORRECT: 'Player 1 voted statement 2 (correct +1 point), Player 3 voted statement 1 (wrong +0 points)'\n"
"‚ùå WRONG: 'Players voted', 'differing votes', 'All players have voted'\n"
"‚úÖ CORRECT: 'Player 2 (speaker) chose statement 2 as lie, earned +0 points this round'\n"
"‚ùå WRONG: 'Voting completed', 'votes received and recorded'\n"
"‚úÖ CORRECT: 'Round totals: Player 1: 5 points, Player 2: 3 points, Player 3: 2 points'\n"
"RULE: Always specify WHO did WHAT with exact POINTS EARNED and TOTAL SCORES\n\n"

"üö´ **VOTING VALIDATION & ERROR HANDLING**:\n"
"1. Check voting eligibility BEFORE updating player_states:\n"
"   ‚Ä¢ can_vote=true AND is_speaker=false (for statement voting)\n"
"2. If invalid vote detected:\n"
"   ‚Ä¢ DO NOT call update_player_state for vote_choice\n"
"   ‚Ä¢ Record in game_notes: 'Player X vote invalid - is current speaker'\n"
"3. Only process and record VALID votes from eligible players\n\n"

"üèÜ **SCORING & RESULTS RECORDING**:\n"
"After voting phase, MUST do:\n"
"1. Get correct answer from player_states: speaker's 'chosen_lie' field\n"
"2. Compare votes: 'Player 1 voted X (correct/wrong), Player 3 voted Y (correct/wrong)'\n"
"3. UPDATE player_states scores: Call update_player_state for each player's new total score\n"
"4. Record detailed results in game_notes:\n"
"   ‚Ä¢ Round outcome: 'Player 1 voted 2 (correct), Player 3 voted 1 (wrong)'\n"
"   ‚Ä¢ Score changes: 'Player 1: +1 point, Player 2: +0 points, Player 3: +0 points'\n"
"   ‚Ä¢ Current totals: 'Total scores - Player 1: 3 points, Player 2: 1 point, Player 3: 2 points'\n"
"MANDATORY: Update both player_states scores AND record complete results in game_notes\n\n"

"üíÄ **DEATH STATUS & RESULTS ANNOUNCEMENT CHECK**:\n"
"üö® **CRITICAL**: If current phase is a results/announcement phase, check player survival:\n"
"‚Ä¢ **VALIDATE**: All state updates must respect death/elimination status\n"
"‚Ä¢ **CRITICAL RULE**: Dead players (is_alive=false) CANNOT perform ANY actions or participate\n"
"‚Ä¢ Examine player_states for is_alive=false players\n"
"‚Ä¢ If any player died (is_alive changed from true to false):\n"
"  - **RECORD**: Add üî¥ CRITICAL game note when setting is_alive=false for any player\n"
"  - Record death in game_notes: 'Player X (RoleName) has been eliminated/died this phase'\n"
"  - Include elimination reason if available in playerActions or game context\n"
"  - Calculate impact on game state (team balance, role distribution)\n"
"‚Ä¢ If multiple deaths occurred, record each separately with specific details\n"
"üìù **MANDATORY PHASE SUMMARY REQUIREMENT**:\n"
"‚Ä¢ **ALWAYS write a narrative summary** of what happened in this phase to game_notes\n"
"‚Ä¢ **FORMAT EXAMPLES**:\n"
"  - Night phases: 'Last night, the Werewolves chose to eliminate Player 1 (Detective). However, Player 1 was protected by the Doctor and survived. There were no deaths last night.'\n"
"  - Day phases: 'During day voting, Player 2 (Werewolf) was eliminated by majority vote. The village successfully identified a werewolf.'\n"
"  - Reveal phases: 'Dawn revealed the night outcomes: Player 3 (Villager) was eliminated by werewolves. The Doctor's protection saved Player 1. Current survivors: Players 1, 2, 4.'\n"
"  - Alternative outcomes: 'Last night, the Werewolves eliminated PlaÔΩûyer 3 (Villager). The Doctor protected Player 1, but Player 3 was not protected and died.'\n"
"‚Ä¢ **INCLUDE**: Actions taken, protection attempts, actual outcomes, survival/death results, revelations\n"
"‚Ä¢ **WRITE**: Clear, narrative-style summaries that explain cause and effect\n"
"‚Ä¢ **REVEAL PHASES SPECIAL**: Include what was revealeÔΩûd, who survived/died, current game state\n"
"‚Ä¢ **CONCLUSION REQUIREMENT**: Write comprehensive game state conclusion to game_notes\n"
"  - Living players summary: 'Remaining alive: Player 2 (Doctor), Player 4 (Villager)'\n"
"  - Team/role analysis: 'Team balance: 2 Villagers vs 1 Werewolf remaining'\n"
"  - Game progression: 'Phase X completed with Y eliminations'\n\n"